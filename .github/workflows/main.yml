# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  BuildLibrary:
    name: Build Library
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        with:
          vs-version: 16.0

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2

      - name: Restore NuGet Packages
        run: nuget restore JExtensions.sln

      - name: Build App
        run: msbuild JExtensions.sln /p:Configuration=Release

      - name: Dump Github Context
        env:
          CONTEXT: ${{ toJson(github) }}
          SECRETS: ${{ toJson(secrets) }}
          TOK: ${{ secrets.JEXTPACK }}
          TEST: ${{ secrets.TEST }
        run: |
          echo $ACCESS_TOKEN
          echo $TOK
          echo $TEST
          echo $GITHUB_TOKEN
          echo "$SECRETS"
          echo "$CONTEXT"

      - name: Setup Config
        run: sed "s/ACCESS_TOKEN/$ACCESS_TOKEN/g" .nuget.config > nuget.config
      - run: cat nuget.config

      - name: Publish
        run: chmod +x ./push.sh && ./push.sh
      # TODO : Disabled Unit Tests, this needs to be worked out from a separate branch
      # - name: Execute Unit Tests
      #   if: ${{ success() }}
      #   run: msbuild.exe /t:test "Extension Methods\JExtensions.UnitTest\JExtensions.UnitTest.csproj"

  BuildDocumentation:
    # The type of runner that the job will run on
    name: Build Documentation
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: nikeee/docfx-action@v1.0.0
        name: Build Documentation
        with:
          args: docfx_project/docfx.json

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docfx_project/_site
        env:
          GITHUB_TOKEN: ${{ secrets.JEXTDOC }}
      # - name: Deploy
      #   uses: JamesIves/github-pages-deploy-action@3.5.9
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.JEXTDOC }}
      #     BRANCH: gh-pages # The branch the action should deploy to.
      #     FOLDER: _site # The folder the action should deploy.
